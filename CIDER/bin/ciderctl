#!/usr/bin/env perl

use warnings;
use strict;

use Daemon::Control;
use Getopt::Long;
use FindBin;
use Config::General;

my %options;
GetOptions( \%options, 'config=s', );

my $config_path = $options{ config } || "$FindBin::Bin/../conf/ciderctl.conf";
if (
    ( $options{ config } && not( -r $config_path ) )
    ||
    ( -e $config_path && not( -r $config_path ) )
) {
    die "ERROR: Can't read config file at $config_path: $!\n";
}

my %config;
if ( -e $config_path ) {
    %config = Config::General->new( $config_path )->getall;
}

$config{name}       ||= 'CIDER';
$config{desc}       ||= 'The CIDER archival collection management tool';
$config{port}       ||= 5000;
$config{access_log} ||= "$FindBin::Bin/../log/access.log";
$config{stderr}     ||= "$FindBin::Bin/../log/error.log";
$config{pidfile}    ||= "$FindBin::Bin/../run/cider.pid";
$config{workers}    ||= 5;

my %user_config = ();
foreach ( qw( user group ) ) {
    $user_config{$_} = $config{$_} if $config{$_};
}

Daemon::Control->new(
    {
        name      => $config{name},
        lsb_start => '$syslog $remote_fs',
        lsb_stop  => '$syslog',
        lsb_sdesc => $config{name},
        lsb_desc  => $config{desc},

        program      => 'starman',
        program_args => [ '--workers', $config{workers},
			  '--port', $config{port},
			  '--access-log', $config{access_log},
			  "$FindBin::Bin/../cider.psgi"
	    ],

        %user_config,

        pid_file    => $config{pidfile},
        stderr_file => $config{stderr},

    }
)->run;

=head1 NAME

ciderctl - A simple control script for CIDER

=head1 SYNOPSIS

    $ ciderctl start
    $ ciderctl restart
    $ ciderctl stop

    # Or....

    $ ciderctl --config=/path/to/different/config.conf start

    # An example tiny config file, using default values for
    # most variables.

    $ cat ../conf/ciderctl.conf
    workers 1
    port 5001

=head1 DESCRIPTION

This is a simple control script for CIDER. Use it to easily start, stop, or
restart CIDER's Starman-based daemon process.

=head1 CONFIGURATION

This script looks for a config file in (relative to itself) ../conf/cideradm.conf, but
it doesn't mind if it doesn't see one there. You can also give it an alternate config
path via the --config command-line option (see L<"SYNOPSIS">).

It uses sensible defaults for any value not specified in the supplied config file.

Recognized config variables:

=over

=item name

The name of this service.

Default: CIDER

=item desc

The description of this service.

Default: The CIDER archival collection management tool

=item port

The port Starman will listen on.

Default: 5000

=item access_log

The access log.

Default: ../log/access.log

=item stderr

Where STDERR messages should get written.

Default: ../log/error.log

=item pidfile

The pidfile path.

Default: ../run/cider.pid

=item workers

The number of listener processes Starman should launch.

Default: 5

=back

=head1 AUTHOR

Jason McIntosh (jmac@jmac.org) for Tufts University.


